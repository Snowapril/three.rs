on: push
name: "Run CI on Pushes"

jobs:
  rust_tests:
    name: "Run Rust Tests"
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      - uses: Swatinem/rust-cache@v1
      - name: Set up wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: Swatinem/rust-cache@v1
      - name: run rust tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --verbose
      - name: check compilation without threading
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features

  js_tests:
    name: "Run JS Tests"
    needs: rust_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      - name: Set up wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: wasm-pack build --target web -- --no-default-features
      - name: install geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux32.tar.gz
          mkdir geckodriver
          tar -xzf geckodriver-v0.24.0-linux32.tar.gz -C geckodriver
      - uses: actions/setup-node@v1
      - name: run test
        run: |
          export PATH=$PATH:`pwd`/../geckodriver
          npm install
          npm run test
        working-directory: ./site

  clippy_check:
    name: "Run Clippy Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            components: clippy
            toolchain: stable
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  cargo_fmt:
    name: "Run Cargo Format Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            components: clippy
            toolchain: stable
            override: true
      - run: cargo fmt -- --check
